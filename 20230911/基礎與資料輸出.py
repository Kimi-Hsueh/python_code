#python運算的結果請參考ipynb檔

#各種不同的資料類型
str('字串')#文字字串
int(20)#整數數值
float(20.1)#浮點數值
bool(False)#布林函數
    #註：結果只會出現最後一個值，是因為若未加入print指令，預設為以display指令，且只會顯示最後一個值

#如何查詢目前資料的型態->print(type(20.1))
print(type('天邊一片雲'))
print(type(20))
print(type(20.1))
print(type(False))

#如何讓python進行運算
#整數運算->print(二元運算式)
print(5+8)
print(90-10)
print(4*7)
print(6/2)
print(7//2)
print(7%3)
print(999**20)

#浮點數與整數運算
print(5.0+8)
print(5.0+8+10)
print(5.0+8*2)
print(2*(1+2)**2-2**2*2)

#字串的加法運算->print('文字' + '文字')
print("abc" + "efg")
print('我是' + '學習者')

#字串+數值 -> 出錯
print("abc" + 13)
#出現錯誤的結果為TypeError: can only concatenate str (not "int") to str
#該錯誤訊息為：僅能字串+字串

#str() -> 轉為字串
print("abc" + str(13))
#出現的結果為'abc13'，因為13被定義成了“文字”

#int() -> 轉為整數
print(int("13") + int("25"))
    #如果出現非整數的狀況
print(int("13.1") + int("25.4"))
    #因為int指令內並非整數，所以出現數值錯誤訊息

#float() -> 轉為浮點數
print(float("13.5") + float("21.7"))
#整數數值與浮點數值運算
print(20+13.1)
    #為什麼整數數值可以與浮點數值進行運算？
    #因為整數數值被先轉為浮點數值，之後才可以進行相同資料類型的運算

#變數宣告
    #變數名稱 = 變數內容
    #與其他程式語言不同的是，在python，變數直接宣告即可
    #範例：
kimi = 1
tina = 6
print(kimi+tina)
    #變數宣告也可以寫在同一行
kimi,tina=1,6
print(kimi+tina)
#如果不使用變數可以選擇以 del 語法將變數刪除以節省記憶體。
#例如刪除 kimi 變數，那操作方式為:
del kimi #這邊不太懂怎麼運用

#變數命名的規則
#開頭第一個字不能是數字。
#可使用大小寫字母或「_」。
#不可與內建保留字 (右邊表格所列) 同名。
#Python 3 可以使用中文名稱。
#大小寫視為不同的變數。
#不可以出現特殊字元或空白。

#question: 請問以下哪一個變數命名是錯的?
#(1) 5well.->錯誤，變數命名首字不可為數字
#(2) pcschool ->正確，因為變數可使用大小寫
#(3) 巨匠 ->正確，因為python3支援中文

#question: 請問以下哪一個變數命名是錯的?(複選題)
#(1) 7eleven ->錯誤，變數首字不可為數字
#(2) pcschool&python ->錯誤，因為變數不可出現特殊字元
#(3) Pcschool python ->錯誤，因為變數不可出現空白
#(4) if ->錯誤，因為變數不可與內建保留字同名

#question: 若要建立 x 變數內容為 15，請問哪一行是對的? (選擇題)
#(1) x equals 15 ->錯誤，因為變數不可以有空白及保留字(我猜的)
#(2) x is 15 ->錯誤，因為變數不可以有空白(我猜的)
#(3) 15 = x  ->錯誤，先變數名稱再等於數字（我猜的）
#(4) x = 15 ->正確

# 註解型態
    #單行註解：只需要在該行開頭加入"#"即可
print("單行註解")
#我是被註解的文字
print("被註解的文字不會出現")
    
    #多行註解：在剛開始的一行加入3個單引號或3個雙引號
print("多行註解")
'''
多行註解從此開始
我是第一行
我是第二行
'''
print("被註解的文字不會出現")

#變數給值與輸出
#一個參數
print(3),print(type(3))
print(3.12),print(type(3.12))
print("Hello! World!"),print(type("Hello World"))
print(3+2),print(type(3+2))


#多個參數
a = 100
print('a=',a)
#print(type('a=')),print(type(a))
b = 50
print('b=', b)
#print(type('b=')),print(type(b))
print("a+b=", a+b)

'''
question:關於輸出語法哪一個是對的?(選擇題)
(1) print 3 + 4 錯誤，因為算式未括狐
(2) print(3 + 4) 正確
(3) print 3 + 4 錯誤，因為算式未括狐
(4) put(3 + 4) 錯誤，因為put不是拿來運算的
'''

'''
question:請問 Python 檔案副檔名哪一個是對的?(選擇題)
(1) .script 錯誤
(2) .pyscript 錯誤
(3) .py 正確
(4) .python 錯誤
#可參考https://iter01.com/691004.html
Python程式的副檔名有.py、.pyc、.pyo和.pyd。.py是原始檔，.pyc是原始檔編譯後的檔案，.pyo是原始檔最佳化編譯後的檔案，.pyd是其他語言寫的Python庫。
'''

#question: 請問執行這一行後的說明哪一個是對的?(選擇題)
print(x1)
#(1) 產生錯誤 #正確，因為x1未被定義變數
#(2) 輸出空白 #錯誤
#(3) 輸出 0 #錯誤

#question: 請問執行後的說明哪一個是對的?(選擇題)
x=50 
x='test' 
print(x)
print(type(x))
#(1) 產生錯誤 錯誤
#(2) 輸出 test 正確，但是為什麼會是出現字串，而不是int
#(3) 輸出 5''' 錯誤，但是為什麼會是出現字串，而不是int

#查詢資料型態
a = 100
print(type(a))
#會出現int的結果
a = 100.0
print(type(a))
#會出現float的結果
a = '100.0'
print(type(a))
#會出現str的結果
a = True
print(type(a))
#會出現bool的結果

'''
資料型態
如何知道變數的資料型態?
可使用 type( ) 指令顯示。
變數內容變更後會儲存於不同的記憶體位址。那要如何查詢位址呢?
可使用 id( ) 指令顯示。
'''
#資料型態:請動手操作，並留意輸出結果(type1.py)
var1=20 
print(type(var1))
#出現int
var2=123.45
print(type(var2))
#出現float
var3=True 
print(type(var3))
#出現bool
var4='string1' 
print(type(var4))
#出現str

#資料型態:請動手操作，並留意輸出結果(type2.py)
print("此為變數內容在記憶體中儲存的位址")
a=5
a=20
print(id(a))
a="test" 
print(id(a)) 

#question:請問執行這兩行後記憶體位址會相同嗎?(選擇題)
a=5.4
print(id(a))
a=20.3
print(id(a))
#(1) 相同 錯誤，因為變數內容變更後會儲存於不同的記憶體位址
#(2) 不同 正確

#字串輸出格式化
'''
符號	說明
%%	在字串 中顯示%
%d	以10 進位整數方式輸出
%f	將浮點 數以10進位方式輸出
%e, %E	將浮點 數以10進位方式輸出，並使用科學記號
%o	以8進 位整數方式輸出
%x, %X	將整數以16進位方式輸出
%s	使用str()將字串輸出
%c	以字元方式輸出
'''
#在輸出浮點數時指定精度
print('example:%.2f' % 19.234)
#語法說明：'example:%.2f'=對數字以'example'小數點後二位輸出
#結果：example:19.23

#也可以指定輸出時，至少要預留的字元寬度
#由於預留了6個字元寬度(什麼是6個字元寬度？？？)，不足的部份要由空白字元補上。使用%運算子來格式化字串，會產生新的字串物件。
print("example:%6.2f" % 19.234)
#語法說明'example:%.2f'=對數字以'example'預留了6個字元寬度小數點後二位輸出
#結果：example: 19.23

#在格式化時，也可以使用關鍵字來指定(這個我就不知道怎麼解釋了t_t)
print('%(real)s is %(nick)s!!' % ({'real' : 'Justin', 'nick' : 'caterpillar'}))
#輸出結果:Justin is caterpillar!!

'''
數值格式化及對齊(這一段我會打指令，但是不知道定義是什麼)
格式化的方式是在後方加上”:“及”格式符”，可用的格式符如下
{:d}        : 整數
{:f}        : 浮點數
{:e} {:E}   : 科學記號，例如 1.020000e+01，大小寫就代表 "e" 顯示的大小寫
{:x} {:X}   : 十六進位，大小寫分別表示 A ~ F 要顯示的大小寫
{:o}        : 八進位
{:b}        : 二進位
{:>}}        : 以百分比的方式輸出
另外可以使用 > ^ < 這三種符號以及數值來搭配佔位及對齊。注意: 數值型別預設是靠右對齊，字串型別預設是靠左對齊

{:>8d}      : 整數靠右對齊，寬度為 8
{:^8d}      : 整數置中對齊，寬度為 8
{:<8d}      : 整數靠左對齊，寬度為 8
{:8.3f}     : 小數點後保留 3 位，總寬度為 8 (含小數點)
{:+8.3f}    : 小數點後保留 3 位，帶正負號，總寬度為 8 (含小數點及正負號)

範例：
#‘:’ 前方的數值如基本操作，代表後方參數的位置
print "|{0:8d}||{1:<8d}|".format(123, 456)
 |     123||456     |
print("|{0:+8.2f}|".format(4.32))
 |   +4.32|
print("|{0:8.2>}}|".format(0.8))
 |  80.00%|
 
字串與數值輸出預設對齊方式的比較
print("|{0:8}|".format(123))
 |     123|
print("|{0:8}|".format("abc"))
 |abc     | 
'''

#字串插補(快速寫法)
text = 'world'
print(f'Hello, {text}')
#是文字變數插入的意思嗎？

x = 10
y = 27
print(f'x + y = {x + y}')
#是插入數字變數的意思嗎？

def hello(text, name):
    return f'hello {text}, hello {name}'
'''
這個跑不出結果來，不知道插入了什麼
還有return是個什麼鬼……
'''